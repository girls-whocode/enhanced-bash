#!/usr/bin/env bash

function distribution () {
    # title             :Enhanced BASH Backup File System
    # description       :A module to display the distrobution
    # author            :Jessica Brown
    # date              :2020-01-25
    # usage			    :bakup [--help|-h] [directory/|filename.ext]
    # notes			    :
    # bash_version	    :4.4.19(1)-release
    # ==============================================================================
    local version="1.0.0"

	local dtype
	# Assume unknown
	dtype="unknown"

	# First test against Fedora / RHEL / CentOS / generic Redhat derivative
	if [ -r /etc/rc.d/init.d/functions ]; then
		source /etc/rc.d/init.d/functions
		[ zz`type -t passed 2>/dev/null` == "zzfunction" ] && dtype="redhat"

	# Then test against SUSE (must be after Redhat,
	# I've seen rc.status on Ubuntu I think? TODO: Recheck that)
	elif [ -r /etc/rc.status ]; then
		source /etc/rc.status
		[ zz`type -t rc_reset 2>/dev/null` == "zzfunction" ] && dtype="suse"

	# Then test against Debian, Ubuntu and friends
	elif [ -r /lib/lsb/init-functions ]; then
		source /lib/lsb/init-functions
		[ zz`type -t log_begin_msg 2>/dev/null` == "zzfunction" ] && dtype="debian"

	# Then test against Gentoo
	elif [ -r /etc/init.d/functions.sh ]; then
		source /etc/init.d/functions.sh
		[ zz`type -t ebegin 2>/dev/null` == "zzfunction" ] && dtype="gentoo"

	# For Mandriva we currently just test if /etc/mandriva-release exists
	# and isn't empty (TODO: Find a better way :)
	elif [ -s /etc/mandriva-release ]; then
		dtype="mandriva"

	# For Slackware we currently just test if /etc/slackware-version exists
	elif [ -s /etc/slackware-version ]; then
		dtype="slackware"

	fi
	echo $dtype
}

function ver () {
    # title             :Enhanced BASH Backup File System
    # description       :A module to display the distro version
    # author            :Jessica Brown
    # date              :2020-01-25
    # usage			    :bakup [--help|-h] [directory/|filename.ext]
    # notes			    :
    # bash_version	    :4.4.19(1)-release
    # ==============================================================================
    local version="1.0.0"
	local dtype
	dtype=$(distribution)

	if [ $dtype == "redhat" ]; then
		if [ -s /etc/redhat-release ]; then
			cat /etc/redhat-release && uname -a
		else
			cat /etc/issue && uname -a
		fi
	elif [ $dtype == "suse" ]; then
		cat /etc/SuSE-release
	elif [ $dtype == "debian" ]; then
		# lsb_release -a
        cat /etc/os-release
		# sudo cat /etc/issue && sudo cat /etc/issue.net && sudo cat /etc/lsb_release && sudo cat /etc/os-release # Linux Mint option 2
	elif [ $dtype == "gentoo" ]; then
		cat /etc/gentoo-release
	elif [ $dtype == "mandriva" ]; then
		cat /etc/mandriva-release
	elif [ $dtype == "slackware" ]; then
		cat /etc/slackware-version
	else
		if [ -s /etc/issue ]; then
			cat /etc/issue
		else
			echo "Error: Unknown distribution"
			exit 1
		fi
	fi
}

function packagemgr() {
    # title             :Enhanced BASH Backup File System
    # description       :A module to test what package manager is installed
    # author            :Jessica Brown
    # date              :2020-01-25
    # usage			    :bakup [--help|-h] [directory/|filename.ext]
    # notes			    :
    # bash_version	    :4.4.19(1)-release
    # ==============================================================================
    local version="1.0.0"

	local dtype
	dtype=$(distribution)

	if [ $dtype == "redhat" ]; then
		local pkgmgr="yum"
        echo "$pkgmgr"
	elif [ $dtype == "suse" ]; then
		local pkgmgr="zypper"
        echo "$pkgmgr"
	elif [ $dtype == "debian" ]; then
        local pkgmgr="apt-get"
        echo "$pkgmgr"
	elif [ $dtype == "gentoo" ]; then
		local pkgmgr="emerge"
        echo "$pkgmgr"
	elif [ $dtype == "mandriva" ]; then
		local pkgmgr="urpmi"
        echo "$pkgmgr"
	elif [ $dtype == "slackware" ]; then
		local pkgmgr="installpkg"
        echo "$pkgmgr"
	else
        local pkgmgr="unknown"
        echo "$pkgmgr"
	fi
}
